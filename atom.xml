<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jhonlibai&#39;s Blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://jhonlibai.top/"/>
  <updated>2018-04-12T02:34:01.124Z</updated>
  <id>http://jhonlibai.top/</id>
  
  <author>
    <name>Jhonlibai</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>常见功能测试点</title>
    <link href="http://jhonlibai.top/2018/04/11/%E5%B8%B8%E8%A7%81%E5%8A%9F%E8%83%BD%E6%B5%8B%E8%AF%95%E7%82%B9/"/>
    <id>http://jhonlibai.top/2018/04/11/常见功能测试点/</id>
    <published>2018-04-11T12:36:25.000Z</published>
    <updated>2018-04-12T02:34:01.124Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>最近在面试软件测试的相关工作，面试的时候发现光有一些理论的知识还远远不够，问到一些测试用例的编写，还是有些语塞。昨天下午的面试面完，好心的小姐姐前辈还教导相关测试用例相关经验。回来之后，我在网上也淘了一些。摘抄如下（搬运）：</p>
<h1 id="1-登陆、添加、删除、查询模块常见的测试点"><a href="#1-登陆、添加、删除、查询模块常见的测试点" class="headerlink" title="1.登陆、添加、删除、查询模块常见的测试点"></a>1.登陆、添加、删除、查询模块常见的测试点</h1><h2 id="1）登陆"><a href="#1）登陆" class="headerlink" title="1）登陆"></a>1）登陆</h2><ul>
<li>用户名和密码都符合要求（格式上的要求）</li>
<li>用户名和密码都不符合要求（格式上的要求）</li>
<li>用户名符合要求，密码不符合要求（格式上的要求）</li>
<li>密码符合要求，用户名不符合要求（格式上的要求）</li>
<li>用户名或密码为空</li>
<li>数据库中不存在的用户名，不存在的密码</li>
<li>数据库中存在的用户名，错误的密码</li>
<li>数据库中不存在的用户名，存在的密码</li>
<li>输入的数据存在空格</li>
<li>输入正确的用户名密码以后按【enter】是否能登陆</li>
</ul>
<hr>
<h2 id="2）添加"><a href="#2）添加" class="headerlink" title="2）添加"></a>2）添加</h2><ul>
<li>要添加的数据项均合理，检查数据库中是否添加了相应的数据</li>
<li>留出一个必填数据为空</li>
<li>按照边界值等价类设计测试用例的原则设计其他输入项的测试用例</li>
<li>不符合要求的地方要有错误提示</li>
<li>是否支持table键</li>
<li>按enter是否能保存</li>
<li>若提示不能保存，也要查看数据库里是否多了一条数据</li>
</ul>
<hr>
<h2 id="3）删除"><a href="#3）删除" class="headerlink" title="3）删除"></a>3）删除</h2><ul>
<li>删除一个数据库中存在的数据，然后查看数据库中是否删除</li>
<li>删除一个数据库中并不存在的数据，看是否有错误提示，并且数据库中有没有数据被删除</li>
<li>输入一个格式错误的数据，看是否有错误提示，并且数据库中没有数据被删除</li>
<li>输入的正确数据前加空格，看是否能正确删除数据</li>
<li>什么也不输入</li>
<li>是否支持table键</li>
<li>是否支持enter键</li>
</ul>
<hr>
<h2 id="4）查询"><a href="#4）查询" class="headerlink" title="4）查询"></a>4）查询</h2><h3 id="精确查询："><a href="#精确查询：" class="headerlink" title="精确查询："></a>精确查询：</h3><ul>
<li>输入的查询条件为数据库中存在的数据，看是否能正确地查出相应的数据</li>
<li>输入正确的查询条件以前加上空格，看是否能正确地查出相应的数据</li>
<li>输入格式或范围不符合要求的数据，看是否有错误提示</li>
<li>输入数据库中不存在的数据</li>
<li>不输入任何数据</li>
<li>是否支持table键</li>
<li>是否支持enter键</li>
</ul>
<h3 id="模糊查询："><a href="#模糊查询：" class="headerlink" title="模糊查询："></a>模糊查询：</h3><p>在精确查询的基础上加上以下一点</p>
<ul>
<li>输入一些字符，看是否能查出数据库中所有的相关信息</li>
</ul>
<hr>
<a id="more"></a>
<h1 id="2-设计功能测试用例"><a href="#2-设计功能测试用例" class="headerlink" title="2.设计功能测试用例"></a>2.设计功能测试用例</h1><h2 id="文本框的测试"><a href="#文本框的测试" class="headerlink" title="文本框的测试"></a>文本框的测试</h2><ul>
<li>输入正常的字母或数字</li>
<li>输入已存在的文件的名称</li>
<li>输入超长字符。例如在“名称”框中输入超过允许边界个数的字符，假设最多255个字符，尝试输入256个字符，检查程序能否正确处理；</li>
<li>输入默认值，空白，空格；</li>
<li>若只允许输入字母，尝试输入数字；反之；尝试输入字母；</li>
<li>利用复制，粘贴等操作强制输入程序不允许的输入数据</li>
<li>输入特殊字符集，例如，NUll及 （空格）等</li>
<li>输入超过文本框长度的字符和文本，检查所输入的内容是否正常显示</li>
<li>输入不符合格式的数据，检查程序是否正常校验，如，程序要求输入年月日格式为yy/mm/dd,实际输入yyy/mm/dd，程序应该给出错误提示<h2 id="在测试过程中所用到的测试方法："><a href="#在测试过程中所用到的测试方法：" class="headerlink" title="在测试过程中所用到的测试方法："></a>在测试过程中所用到的测试方法：</h2></li>
<li>输入非法数据</li>
<li>输入默认值</li>
<li>输入特殊字符集</li>
<li>输入使缓冲区溢出的数据</li>
<li>输入相同的文件名</li>
</ul>
<hr>
<h2 id="命令按钮控件的测试"><a href="#命令按钮控件的测试" class="headerlink" title="命令按钮控件的测试"></a>命令按钮控件的测试</h2><ul>
<li>点击按钮正确相应操作。如，单击确定，正确执行操作；单击取消，退出窗口；</li>
<li>对非法的输入或操作给出足够的提示说明。如，输入月工作天数为32时，单击“确定”后系统应提示：天数不能大于31；</li>
<li>对可能造成数据无法恢复的操作必须给出确认信息，给用户放弃选择的机会</li>
</ul>
<hr>
<h2 id="单选按钮控件的测试"><a href="#单选按钮控件的测试" class="headerlink" title="单选按钮控件的测试"></a>单选按钮控件的测试</h2><ul>
<li>一组单选按钮不能同时选中，只能选中一个</li>
<li>逐一执行每个单选按钮的功能。分别选择了“男”、“女”后，保存早数据库的数据应该相应的分别为“男”、“女”</li>
<li>一组执行同一功能的单选按钮在初始状态时必须有一夜被默认选中，不能同时为空</li>
</ul>
<hr>
<h2 id="up-down控件文本框的测试"><a href="#up-down控件文本框的测试" class="headerlink" title="up-down控件文本框的测试"></a>up-down控件文本框的测试</h2><ul>
<li>直接输入数字或用上下箭头控制，如，在“数目”中直接输入10，或者单击向上的箭头，使数目变为10</li>
<li>利用上下箭头控制数字的自动循环，如，当最多数字为253时，单击向上箭头，数目自动变为1，反之亦适用</li>
<li>直接输入超边界值，系统应该提示重新输入</li>
<li>输入默认值，空白。如，“插入”数目为默认值，点击“确定”；或，删除默认值，时内容为空，单击“确定”进行测试、</li>
<li>输入字符，此时系统应提示输入有误</li>
</ul>
<hr>
<h2 id="组合列表框的测试"><a href="#组合列表框的测试" class="headerlink" title="组合列表框的测试"></a>组合列表框的测试</h2><ul>
<li>条目内容正确，其详细条目内容可以根据需求说明确定</li>
<li>逐一执行列表框中每个条目的功能</li>
<li>检查能否向组合列表框输入数据</li>
</ul>
<hr>
<h2 id="复选框的测试"><a href="#复选框的测试" class="headerlink" title="复选框的测试"></a>复选框的测试</h2><ul>
<li>多个复选框可以被同时选中</li>
<li>多个复选框可以被部分选中</li>
<li>多个复选框可以都不被选中</li>
<li>逐一执行每个复选框的功能</li>
</ul>
<hr>
<h2 id="列表框控件的测试"><a href="#列表框控件的测试" class="headerlink" title="列表框控件的测试"></a>列表框控件的测试</h2><ul>
<li>条目内容正确；同组合列表框类似，根据需求说明书确定列表的各项内容正确，没有丢失或错误</li>
<li>列表框的内容较多时要使用滚动条</li>
<li>列表框允许多选时，要分别检查SHIFT选中条目，按ctrl选中条目和直接用鼠标选中多项条目的情况</li>
</ul>
<hr>
<h2 id="滚动条控件的测试"><a href="#滚动条控件的测试" class="headerlink" title="滚动条控件的测试"></a>滚动条控件的测试</h2><ul>
<li>滚动条的长度根据显示信息的长度或宽度及时变换，这样有利于用户了解显示信息的位置和百分比。比如：word中浏览100也文档，浏览到50页时，滚动条位置应处于中间</li>
<li>拖动滚动条，检查屏幕涮新情况，并查看是否有乱码</li>
<li>单击滚动条</li>
<li>用滚轮控制滚动条</li>
<li>滚动条的上下按钮</li>
</ul>
<hr>
<h2 id="各种控件在窗体中混合使用时的测试"><a href="#各种控件在窗体中混合使用时的测试" class="headerlink" title="各种控件在窗体中混合使用时的测试"></a>各种控件在窗体中混合使用时的测试</h2><ul>
<li>控件间的相互作用</li>
<li>tab键的使用，一般是从上到下，从左到右</li>
<li>热键的使用，逐一测试</li>
<li>enter键和esc键的使用</li>
</ul>
<p>在测试中，应遵循由简入繁的原则，先进行单个控件功能的测试，确保实现无误后，再进行多个控件的的功能组合的测试。<br>ps:密码输入框测试时要特别注意进行字母大写输入的测试</p>
<hr>
<h2 id="查找替换操作"><a href="#查找替换操作" class="headerlink" title="查找替换操作"></a>查找替换操作</h2><p>案例演示:打开word中的”替换”对话框<br>测试本功能有通过测试和失败测试两种情况<br>通过测试:</p>
<ul>
<li>输入内容直接查找，或查找全部</li>
<li>在组合框中寻找已经查找过的内容，再次查找并确认文档的内容正确，如，已经查找过”测试用例”，再次进入不用重新输入查找内容，直接在文档中搜寻就可以.</li>
</ul>
<p>失败测试:</p>
<ul>
<li>输入过长或过短的查询字符串.如，假设查询的字符串长度为1到255，那么输入0，1，2，256，255和254进行测试;</li>
<li>输入特殊字符集，如，在word中.^g代表图片，^代表分栏符，可以输入这类特殊字符测试;</li>
</ul>
<p>　　替换测试大体相同</p>
<h2 id="关于编辑操作窗口的功能测试的用例"><a href="#关于编辑操作窗口的功能测试的用例" class="headerlink" title="关于编辑操作窗口的功能测试的用例"></a>关于编辑操作窗口的功能测试的用例</h2><ul>
<li>关闭查找替换窗口，不执行任何操作，直接退出</li>
<li>附件和选项测试，假如，设定“精确搜寻”，“向后”搜索等附件选项等等来测试</li>
<li>控件间的相互作用，如，搜寻内容为空时，按钮“搜寻全部”，“搜寻”，“全部替换”，“替换”都为灰色</li>
<li>热键，Tab键，回车键等的使用</li>
</ul>
<hr>
<h2 id="插入操作"><a href="#插入操作" class="headerlink" title="插入操作"></a>插入操作</h2><h3 id="插入文件"><a href="#插入文件" class="headerlink" title="插入文件"></a>插入文件</h3><ul>
<li>插入文件</li>
<li>插入图像</li>
<li>在文档中插入文档本身</li>
<li>移除插入的源文件</li>
<li>更换插入的源文件的内容</li>
</ul>
<h3 id="链接文件"><a href="#链接文件" class="headerlink" title="链接文件"></a>链接文件</h3><ul>
<li>插入链接文件</li>
<li>在文档中链接文档本身</li>
<li>移除插入的源文件</li>
<li>更换插入的源文件的内容</li>
</ul>
<h3 id="插入对象"><a href="#插入对象" class="headerlink" title="插入对象"></a>插入对象</h3><ul>
<li>插入程序允许的对象，如：在word中插入excel工作表</li>
<li>修改所插入对象的内容，插入的对象仍能正确显示</li>
<li>卸载生成插入对象的程序，如：在word中插入excel工作表后卸载excel，工作表仍正常使用。</li>
</ul>
<h2 id="编辑操作"><a href="#编辑操作" class="headerlink" title="编辑操作"></a>编辑操作</h2><p>编辑操作包括剪切，复制，粘贴操作<br>测试剪切操作的方法：</p>
<ul>
<li>对文本，文本框，图文框进行剪切</li>
<li>剪切图像</li>
<li>文本图像混合剪切</li>
</ul>
<p>复制操作方法与剪切类似<br>对粘贴操作的测试：</p>
<ul>
<li>粘贴剪切的文本，文本框及图文框</li>
<li>粘贴所剪切的图像</li>
<li>剪切后，在不同的程序中粘贴</li>
<li>多次粘贴同一内容，如：剪切后，在程序中连续粘贴3次</li>
<li>利用粘贴操作强制输入程序所不允许输入的数据</li>
</ul>
<hr>
<h1 id="界面测试用例的设计方法"><a href="#界面测试用例的设计方法" class="headerlink" title="界面测试用例的设计方法"></a>界面测试用例的设计方法</h1><h2 id="窗体"><a href="#窗体" class="headerlink" title="窗体"></a>窗体</h2><ul>
<li>窗体的大小，大小要合适，控件布局合理</li>
<li>移动窗体、快速或慢速移动窗体，背景及窗体本身刷新必须正确</li>
<li>缩放窗体，窗体上的控件应随窗体的大小变化而变化</li>
<li>显示分辨率，必须在不同的分辨率的情况下测试程序的显示是否正常</li>
<li>进行测试时还要注意状态栏是否显示正确；工具栏的图标执行操作是否有效，是否与菜单栏中图标显示一致；错误信息内容是否正确，无错别字，且明确等等</li>
</ul>
<h2 id="控件"><a href="#控件" class="headerlink" title="控件"></a>控件</h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近在面试软件测试的相关工作，面试的时候发现光有一些理论的知识还远远不够，问到一些测试用例的编写，还是有些语塞。昨天下午的面试面完，好心的小姐姐前辈还教导相关测试用例相关经验。回来之后，我在网上也淘了一些。摘抄如下（搬运）：&lt;/p&gt;
&lt;h1 id=&quot;1-登陆、添加、删除、查询模块常见的测试点&quot;&gt;&lt;a href=&quot;#1-登陆、添加、删除、查询模块常见的测试点&quot; class=&quot;headerlink&quot; title=&quot;1.登陆、添加、删除、查询模块常见的测试点&quot;&gt;&lt;/a&gt;1.登陆、添加、删除、查询模块常见的测试点&lt;/h1&gt;&lt;h2 id=&quot;1）登陆&quot;&gt;&lt;a href=&quot;#1）登陆&quot; class=&quot;headerlink&quot; title=&quot;1）登陆&quot;&gt;&lt;/a&gt;1）登陆&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;用户名和密码都符合要求（格式上的要求）&lt;/li&gt;
&lt;li&gt;用户名和密码都不符合要求（格式上的要求）&lt;/li&gt;
&lt;li&gt;用户名符合要求，密码不符合要求（格式上的要求）&lt;/li&gt;
&lt;li&gt;密码符合要求，用户名不符合要求（格式上的要求）&lt;/li&gt;
&lt;li&gt;用户名或密码为空&lt;/li&gt;
&lt;li&gt;数据库中不存在的用户名，不存在的密码&lt;/li&gt;
&lt;li&gt;数据库中存在的用户名，错误的密码&lt;/li&gt;
&lt;li&gt;数据库中不存在的用户名，存在的密码&lt;/li&gt;
&lt;li&gt;输入的数据存在空格&lt;/li&gt;
&lt;li&gt;输入正确的用户名密码以后按【enter】是否能登陆&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&quot;2）添加&quot;&gt;&lt;a href=&quot;#2）添加&quot; class=&quot;headerlink&quot; title=&quot;2）添加&quot;&gt;&lt;/a&gt;2）添加&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;要添加的数据项均合理，检查数据库中是否添加了相应的数据&lt;/li&gt;
&lt;li&gt;留出一个必填数据为空&lt;/li&gt;
&lt;li&gt;按照边界值等价类设计测试用例的原则设计其他输入项的测试用例&lt;/li&gt;
&lt;li&gt;不符合要求的地方要有错误提示&lt;/li&gt;
&lt;li&gt;是否支持table键&lt;/li&gt;
&lt;li&gt;按enter是否能保存&lt;/li&gt;
&lt;li&gt;若提示不能保存，也要查看数据库里是否多了一条数据&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&quot;3）删除&quot;&gt;&lt;a href=&quot;#3）删除&quot; class=&quot;headerlink&quot; title=&quot;3）删除&quot;&gt;&lt;/a&gt;3）删除&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;删除一个数据库中存在的数据，然后查看数据库中是否删除&lt;/li&gt;
&lt;li&gt;删除一个数据库中并不存在的数据，看是否有错误提示，并且数据库中有没有数据被删除&lt;/li&gt;
&lt;li&gt;输入一个格式错误的数据，看是否有错误提示，并且数据库中没有数据被删除&lt;/li&gt;
&lt;li&gt;输入的正确数据前加空格，看是否能正确删除数据&lt;/li&gt;
&lt;li&gt;什么也不输入&lt;/li&gt;
&lt;li&gt;是否支持table键&lt;/li&gt;
&lt;li&gt;是否支持enter键&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&quot;4）查询&quot;&gt;&lt;a href=&quot;#4）查询&quot; class=&quot;headerlink&quot; title=&quot;4）查询&quot;&gt;&lt;/a&gt;4）查询&lt;/h2&gt;&lt;h3 id=&quot;精确查询：&quot;&gt;&lt;a href=&quot;#精确查询：&quot; class=&quot;headerlink&quot; title=&quot;精确查询：&quot;&gt;&lt;/a&gt;精确查询：&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;输入的查询条件为数据库中存在的数据，看是否能正确地查出相应的数据&lt;/li&gt;
&lt;li&gt;输入正确的查询条件以前加上空格，看是否能正确地查出相应的数据&lt;/li&gt;
&lt;li&gt;输入格式或范围不符合要求的数据，看是否有错误提示&lt;/li&gt;
&lt;li&gt;输入数据库中不存在的数据&lt;/li&gt;
&lt;li&gt;不输入任何数据&lt;/li&gt;
&lt;li&gt;是否支持table键&lt;/li&gt;
&lt;li&gt;是否支持enter键&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;模糊查询：&quot;&gt;&lt;a href=&quot;#模糊查询：&quot; class=&quot;headerlink&quot; title=&quot;模糊查询：&quot;&gt;&lt;/a&gt;模糊查询：&lt;/h3&gt;&lt;p&gt;在精确查询的基础上加上以下一点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;输入一些字符，看是否能查出数据库中所有的相关信息&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
    
    </summary>
    
    
      <category term="软件测试" scheme="http://jhonlibai.top/tags/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>碎绪</title>
    <link href="http://jhonlibai.top/2017/12/25/%E7%A2%8E%E7%BB%AA/"/>
    <id>http://jhonlibai.top/2017/12/25/碎绪/</id>
    <published>2017-12-25T07:38:19.000Z</published>
    <updated>2017-12-26T09:04:52.249Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>今天是2017年12月25日，西方的圣诞节，到中国又多了一个情人节，（汗）。距离2018年还有6天，呀，“又双叒叕”（ruo,zhuo)过了一年，在感慨时间流逝的同时，我回顾自身。8月份自己在网上捣鼓了这个blog，百度了各种教程，观摩前辈大神的blog，磕磕绊绊也算有个样子了。当初是在逛知乎的时候看见一位答主的blog，感慨他的页面的漂亮，继而被hexo的’样貌’给吸引而搭建的,简洁、大方、美观。做完之后，想着当自己的日记或者学习笔记。看着好多大神都有记录有关技术帖子，或者最近接触的相关知识都记录在自己的blog上。我也想这样呢！（心虚。。。）<br>9月份末我接触到python，虽然还不太懂，但网上都说python入门简单，功能强大。并且当时想着换工作的打算，于是就马马虎虎的学下了，在网上搜了好多书籍和视频，都屯到我的百度云里，想着有空慢慢看，（然而并没有看多少，(lll￢ω￢)）</p>
]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;p&gt;今天是2017年12月25日，西方的圣诞节，到中国又多了一个情人节，（汗）。
    
    </summary>
    
    
      <category term="日记" scheme="http://jhonlibai.top/tags/%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>python学习日志2</title>
    <link href="http://jhonlibai.top/2017/12/18/python%E6%97%A5%E5%BF%972/"/>
    <id>http://jhonlibai.top/2017/12/18/python日志2/</id>
    <published>2017-12-18T06:04:08.000Z</published>
    <updated>2017-12-18T08:46:23.985Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="闲话"><a href="#闲话" class="headerlink" title="闲话"></a>闲话</h2><p>时隔一个多月，（额，不，快两个月了。汗！）我终于想起来写我的学习日志了。上个星期我“又双”找了一些爬虫的学习视频。以下是我根据视频里的讲解将代码摘录出的。（侵，删）貌似也没人会看我的blog呢。该系列的爬虫视频一共4期，我才看了2期。感觉讲得很好。所以我也把人家的教学内容里的代码给搬过来了，汗！这次搬运过来的2篇爬虫练习是：1.爬取豆瓣电影top250（网上好多类似爬取豆瓣的。）；2.爬取网易云音乐热评。</p>
<h2 id="第一篇：爬取豆瓣电影top250"><a href="#第一篇：爬取豆瓣电影top250" class="headerlink" title="第一篇：爬取豆瓣电影top250"></a>第一篇：爬取豆瓣电影top250</h2><a id="more"></a>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line"><span class="keyword">import</span> re</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">open_url</span><span class="params">(url)</span>:</span></div><div class="line">    headers = &#123;</div><div class="line">        <span class="string">'user-agent'</span>:<span class="string">'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36'</span></div><div class="line">    &#125;</div><div class="line">    res = requests.get(url, headers= headers)</div><div class="line">    <span class="keyword">return</span> res</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">find_movies</span><span class="params">(res)</span>:</span></div><div class="line">    soup = BeautifulSoup(res.text, <span class="string">'html.parser'</span>)</div><div class="line"></div><div class="line">    <span class="comment">#电影名</span></div><div class="line">    movies = []</div><div class="line">    targets = soup.find_all(<span class="string">'div'</span>, class_=<span class="string">'hd'</span>)</div><div class="line">    <span class="keyword">for</span> each <span class="keyword">in</span> targets:</div><div class="line">        movies.append(each.a.span.text)</div><div class="line"></div><div class="line">    <span class="comment">#评分</span></div><div class="line">    ranks = []</div><div class="line">    targets = soup.find_all(<span class="string">'span'</span>, class_=<span class="string">'rating_num'</span>)</div><div class="line">    <span class="keyword">for</span> each <span class="keyword">in</span> targets:</div><div class="line">        ranks.append(<span class="string">'评分: %s'</span> % each.text)</div><div class="line"></div><div class="line">    <span class="comment">#资料</span></div><div class="line">    messages = []</div><div class="line">    targets = soup.find_all(<span class="string">'div'</span>, class_=<span class="string">'bd'</span>)</div><div class="line">    <span class="keyword">for</span> each <span class="keyword">in</span> targets:</div><div class="line">        <span class="keyword">try</span>:</div><div class="line">            messages.append(each.p.text.split(<span class="string">'\n'</span>)[<span class="number">1</span>].strip() + each.p.text.split(<span class="string">'\n'</span>)[<span class="number">2</span>].strip())</div><div class="line">        <span class="keyword">except</span>:</div><div class="line">            <span class="keyword">continue</span></div><div class="line"></div><div class="line">    result = []</div><div class="line">    length = len(movies)</div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(length):</div><div class="line">        result.append(movies[i] + ranks[i] + messages[i] + <span class="string">'\n'</span>)</div><div class="line"></div><div class="line">    <span class="keyword">return</span>  result</div><div class="line"></div><div class="line"><span class="comment">#找出一共多少个页面</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">find_depth</span><span class="params">(res)</span>:</span></div><div class="line">    soup = BeautifulSoup(res.text, <span class="string">'html.parser'</span>)</div><div class="line">    depth = soup.find(<span class="string">'span'</span>, class_=<span class="string">'next'</span>).previous_sibling.previous_sibling.text</div><div class="line">    <span class="keyword">return</span> int(depth)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    host = <span class="string">"https://movie.douban.com/top250"</span></div><div class="line">    res = open_url(host)</div><div class="line">    depth = find_depth(res)</div><div class="line"></div><div class="line">    result = []</div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(depth):</div><div class="line">        url = host + <span class="string">'/?start='</span> + str(<span class="number">25</span> * i)</div><div class="line">        res = open_url(url)</div><div class="line">        result.extend(find_movies(res))</div><div class="line">        </div><div class="line">    <span class="comment">#将爬取的资源写入txt文本。</span></div><div class="line">    <span class="keyword">with</span> open(<span class="string">"豆瓣TOP250电影.txt"</span>, <span class="string">"w"</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</div><div class="line">        <span class="keyword">for</span> each <span class="keyword">in</span> result:</div><div class="line">            f.write(each)</div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>这段代码主要运用了python的3个主流模块requests，beautifsoup,re(正则)。在主函数中作者还加了一个将爬取的资源写入text文本操作。在find_movies函数中，作者分别抓取了电影名称，评分，资料。然后在利用find_depth函数统计网页的页数。将上述爬取的功能在统计出的页数内循环。最后写入txt文档。</p>
<h2 id="第二篇：爬取网易云音乐热评"><a href="#第二篇：爬取网易云音乐热评" class="headerlink" title="第二篇：爬取网易云音乐热评"></a>第二篇：爬取网易云音乐热评</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">import</span> json</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_hot_comments</span><span class="params">(res)</span>:</span></div><div class="line">    comments_json = json.loads(res.text)</div><div class="line">    hot_comments = comments_json[<span class="string">'hotComments'</span>]</div><div class="line">    <span class="keyword">with</span> open(<span class="string">'hot_comments.txt'</span>, <span class="string">'w'</span>,encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> file:</div><div class="line">        <span class="keyword">for</span> each <span class="keyword">in</span> hot_comments:</div><div class="line">            file.write(each[<span class="string">'user'</span>][<span class="string">'nickname'</span>] + <span class="string">' :\n\n'</span>)</div><div class="line">            file.write(each[<span class="string">'content'</span>] + <span class="string">'\n'</span>)</div><div class="line">            file.write(<span class="string">"----------------------------------\n"</span>)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_comments</span><span class="params">(url)</span>:</span></div><div class="line">    name_id = url.split(<span class="string">'='</span>)[<span class="number">1</span>]</div><div class="line"></div><div class="line">    headers = &#123;</div><div class="line">        <span class="string">'user-agent'</span>:<span class="string">'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36'</span>,</div><div class="line">        <span class="string">'referer'</span>: <span class="string">'http://music.163.com/song?id=299116'</span></div><div class="line">    &#125;</div><div class="line">    params = <span class="string">"kVOK9yH1g693xp2kbk / C / TQ6HdH / 8ksAbmy8lusmgpPjwDnEvOZn5CdJAcfbQ6DbKOGbwfCVtZWHFxayfe9jDW77R4aITNkgJoStKlPNjM0ABvKBYOo2yuvBdP3d + B5g5uO1Me5M7 + CTwRQvnZNp39zwQ3P4kJ2ab0txZEDt5H38FwqtJ4YlaIqoE5JA + 2hb5OsPJBX4xzUyfzSLlkJTMclcADmsV8OqTw4QyKSMyqk "</span></div><div class="line">    encSecKey = <span class="string">"2f5e2a9247b9ebb24da8cf961dc5bd0e7db6d220fe41e06fe10cd936ebf8df629b3336fd8475198c206bb45816ddabbc9c7cfbe9894603d9ab1589857e8eb498312cf1360ab2b3db35be6648fe80091b21454c89e453e4546613f93b98197bc2e40e7e1c01b0f43d19a113f58939127dacaecfd670ed5d242cd19e2a2aed5262"</span></div><div class="line">    data = &#123;</div><div class="line">        <span class="string">"params"</span>:params,</div><div class="line">        <span class="string">"encSecKey"</span>:encSecKey</div><div class="line">    &#125;</div><div class="line">    target_url = <span class="string">"http://music.163.com/weapi/v1/resource/comments/R_SO_4_&#123;&#125;?csrf_token="</span>.format(name_id)</div><div class="line">    res = requests.post(target_url, headers=headers,data=data)</div><div class="line">    <span class="keyword">return</span> res</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    url = input(<span class="string">"请输入链接地址："</span>)</div><div class="line">    res = get_comments(url)</div><div class="line">    hot_comments = get_hot_comments(res)</div><div class="line"></div><div class="line">    <span class="keyword">with</span> open(<span class="string">"res.txt"</span>, <span class="string">"w"</span>, encoding=<span class="string">"utf-8"</span>) <span class="keyword">as</span> file:</div><div class="line">        file.write(res.text)</div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>以上是爬取网易云音乐网页版单首歌曲的热门评论的代码。你只要输入链接地址就可以爬取热门评论。要注意的是在get_comments函数中headers，params，encSeckey所赋值的一长串字符是需要在网页的“检查”中摘取，具体摘取方法请点击链接：<a href="https://www.bilibili.com/video/av15834715/#page=4/" target="_blank" rel="external">爬取网易云音乐热门评论</a> </p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;闲话&quot;&gt;&lt;a href=&quot;#闲话&quot; class=&quot;headerlink&quot; title=&quot;闲话&quot;&gt;&lt;/a&gt;闲话&lt;/h2&gt;&lt;p&gt;时隔一个多月，（额，不，快两个月了。汗！）我终于想起来写我的学习日志了。上个星期我“又双”找了一些爬虫的学习视频。以下是我根据视频里的讲解将代码摘录出的。（侵，删）貌似也没人会看我的blog呢。该系列的爬虫视频一共4期，我才看了2期。感觉讲得很好。所以我也把人家的教学内容里的代码给搬过来了，汗！这次搬运过来的2篇爬虫练习是：1.爬取豆瓣电影top250（网上好多类似爬取豆瓣的。）；2.爬取网易云音乐热评。&lt;/p&gt;
&lt;h2 id=&quot;第一篇：爬取豆瓣电影top250&quot;&gt;&lt;a href=&quot;#第一篇：爬取豆瓣电影top250&quot; class=&quot;headerlink&quot; title=&quot;第一篇：爬取豆瓣电影top250&quot;&gt;&lt;/a&gt;第一篇：爬取豆瓣电影top250&lt;/h2&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>python学习日志1</title>
    <link href="http://jhonlibai.top/2017/10/23/python%E6%97%A5%E5%BF%971/"/>
    <id>http://jhonlibai.top/2017/10/23/python日志1/</id>
    <published>2017-10-23T07:02:39.000Z</published>
    <updated>2017-12-18T08:50:24.943Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>前几天在网易云课堂学了几集Python抓取实战。跟着视频的节奏尝试学着敲了下来。代码如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</div><div class="line"><span class="keyword">import</span> re</div><div class="line"><span class="keyword">import</span> json</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">getCommentCounts</span><span class="params">(newsurl)</span>:</span></div><div class="line">    m = re.search(<span class="string">'doc-i(.*).shtml'</span>, newsurl)</div><div class="line">    newsid = m.group(<span class="number">1</span>)</div><div class="line">    comments = requests.get(commenturl.format(newsid))</div><div class="line">    jd = json.loads(comments.text.strip(<span class="string">'var data='</span>))</div><div class="line">    <span class="keyword">return</span> jd[<span class="string">'result'</span>][<span class="string">'count'</span>][<span class="string">'total'</span>]</div><div class="line">   </div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">getNewsDetail</span><span class="params">(newsurl)</span>:</span></div><div class="line">    result = &#123;&#125;</div><div class="line">    res = requests.get(newsurl)</div><div class="line">    res.encoding = <span class="string">'utf-8'</span></div><div class="line">    soup = BeautifulSoup(res.text,<span class="string">'html.parser'</span>)</div><div class="line">    result[<span class="string">'title'</span>] = soup.select(<span class="string">'#artibodyTitle'</span>)[<span class="number">0</span>].text</div><div class="line">    result[<span class="string">'newssource'</span>] = soup.select(<span class="string">'.time-source span a'</span>)[<span class="number">0</span>].text</div><div class="line">    timesource = soup.select(<span class="string">'.time-source'</span>)[<span class="number">0</span>].contents[<span class="number">0</span>].strip()</div><div class="line">    result[<span class="string">'dt'</span>] = datetime.strptime(timesource,<span class="string">'%Y年%m月%d日%H:%M'</span>)</div><div class="line">    result[<span class="string">'article'</span>] = <span class="string">'@'</span>.join([p.text.strip() <span class="keyword">for</span> p <span class="keyword">in</span> soup.select(<span class="string">'#artibody p'</span>)[:<span class="number">-1</span>]])</div><div class="line">    result[<span class="string">'editor'</span>] = soup.select(<span class="string">'.article-editor'</span>)[<span class="number">0</span>].text</div><div class="line">    result[<span class="string">'comments'</span>] = getCommentCounts(newsurl)</div><div class="line">    <span class="keyword">return</span> result</div><div class="line"></div><div class="line">newsurl = <span class="string">'http://news.sina.com.cn/c/nd/2017-10-21/doc-ifymzzpv8209433.shtml'</span></div><div class="line">commenturl = <span class="string">'http://comment5.news.sina.com.cn/page/info?version=1&amp;format=js&amp;channel=gn&amp;newsid=comos-&#123;&#125;&amp;group=&amp;compress=0&amp;ie=utf-8&amp;oe=utf-8&amp;page=1&amp;page_size=20'</span></div><div class="line">print(getNewsDetail(newsurl))</div><div class="line"></div><div class="line"></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>message = <span class="string">'''interpreter</span></div><div class="line"><span class="string"><span class="meta">... </span>prompt'''</span></div></pre></td></tr></table></figure></p>
<p>这是抓取了一个新浪新闻标题为“清华生会游泳才能毕业？新生:游泳比考清华容易”的文章。抓取内容如下：<br><img src="http://ov67n3jz8.bkt.clouddn.com/%E6%8A%93%E5%8F%96%E5%86%85%E5%AE%B9.png" alt="抓取内容"><br>这段代码中定义了2个函数一个是获取文章细节：<br>    def getNewsDetail(newsurl):<br>另一个是获取文章评论数：<br>    def getCommentCounts(newsurl):<br>函数内是类似如下相关剖析代码：<br><img src="http://ov67n3jz8.bkt.clouddn.com/%E4%B8%BE%E4%BE%8B%E8%AF%B4%E6%98%8E.png" alt="举例说明"><br>主要运用的python模块库有Request、BeautifulSoup4、re、json、datetime.<br>以上完结，撒花。<br>下次更新同时抓取多个文章内容。</p>
]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;p&gt;前几天在网易云课堂学了几集Python抓取实战。跟着视频的节奏尝试学着敲了下
    
    </summary>
    
    
      <category term="学习" scheme="http://jhonlibai.top/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>随笔4</title>
    <link href="http://jhonlibai.top/2017/10/02/%E9%9A%8F%E7%AC%944/"/>
    <id>http://jhonlibai.top/2017/10/02/随笔4/</id>
    <published>2017-10-02T11:58:11.000Z</published>
    <updated>2017-10-02T12:17:44.896Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>今天是10/1长假的第二天，一如往日的无所事是。下午跑去网吧上了半天的网。一个人时间长了，连选择游戏都是一件困惑的事情，已经不能像以前那样对某款游戏迷恋很长时间。现在只是打发时间的工具，一切的事物对我而言，看上去是那么的乏陈无味。感觉自己得了一种病，一种矫情的病。不然也不会在这写下不知所云的话语。<br>日子像一条干渴的河床，期待一场突如其来暴风雨。</p>
]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;p&gt;今天是10/1长假的第二天，一如往日的无所事是。下午跑去网吧上了半天的网。一
    
    </summary>
    
    
      <category term="日记" scheme="http://jhonlibai.top/tags/%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>python学习日志0</title>
    <link href="http://jhonlibai.top/2017/09/25/Python%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%970/"/>
    <id>http://jhonlibai.top/2017/09/25/Python学习日志0/</id>
    <published>2017-09-25T02:49:45.192Z</published>
    <updated>2017-09-25T04:05:52.087Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>  在8月份我捣鼓了1个星期的hexo + next的静态博客。在观摩别人的博客，和在阅读了网上许多的配置教程。磕磕绊绊中，我也搭建了一个自己的博客。并且注册了一个自己域名jhonlibai.top。虽然搭建了博客，可自己是个懒猪，并没有更好地扩展和美化它。不过能够搭建自己的个人域名博客，还是很开心，有些自豪的。当初有这个搭建博客的想法，完全是因为被它美观、简洁的外表所吸引。<br>  然而搭建了之后，我就发现一个问题。怎么更新和管理。hexo是一个静态的博客框架。然，还缺少一些可以在线管理自己的博客的功能。不过有问题都可以找度娘。然后我们可以发现一个大家都积极推荐的一款软件markdown编辑器。用它就可以编辑文章内容了。不过要新建文章你还是要用到git。这在搭建hexo就要用到。嗯，，，说了那么多。好像和Python没关系。哈哈哈哈哈！<br>  接触Python是9月份的事了，就酱，下回想起在表。</p>
]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;p&gt;  在8月份我捣鼓了1个星期的hexo + next的静态博客。在观摩别人的
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>随笔3</title>
    <link href="http://jhonlibai.top/2017/08/29/%E9%9A%8F%E7%AC%943/"/>
    <id>http://jhonlibai.top/2017/08/29/随笔3/</id>
    <published>2017-08-29T08:13:50.607Z</published>
    <updated>2017-08-29T08:22:52.213Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="生无可恋"><a href="#生无可恋" class="headerlink" title="生无可恋"></a>生无可恋</h1><blockquote>
<ul>
<li>睡醒了，起床么？不想起，起来也不知道干啥，没意思。</li>
<li>再睡会？睡不着了，也没意思。</li>
<li>终于起来了，先把电脑打开吧，看看手机，一个消息都没有，没意思。</li>
<li>刷个牙洗个脸？给谁看啊，不去，没意思。</li>
<li>电脑开了，学习？学你妹，没意思。</li>
<li>那看会视频？看啥，啥都不想看，没意思。</li>
<li>算了还是打局DOTA吧，输了，MLGB，好没意思。</li>
<li>再打一局吧，赢了，好像TM也没啥意思。</li>
<li>中午了，吃个饭？吃啥，不想吃，没意思。</li>
<li>喊谁出去玩吧？开个手机把通讯录从头看到尾，好像喊谁都不合适，算了，没意思。</li>
<li>看看跑男好了，嘻嘻嘻嘻嘻嘻哈哈哈哈哈哈，好没意思。</li>
<li>好饿，点个外卖吧，虽然不知道这是午饭还是晚饭。</li>
<li>好饿，外卖呢。</li>
<li>好饿，外卖呢！</li>
<li><p>好饿，我要饿死了……………………………………………………</p>
</li>
<li><p>外卖终于来了，呼噜噜噜，饱了，刚才为什么不让我饿死？真没意思。</p>
</li>
</ul>
</blockquote>
<ul>
<li>作者：大熊猫不含糖</li>
<li>链接：<a href="https://www.zhihu.com/question/31519677/" target="_blank" rel="external">https://www.zhihu.com/question/31519677/</a> answer/70523620</li>
<li>来源：知乎</li>
</ul>
<hr>
<ul>
<li><p><img src="http://ov67n3jz8.bkt.clouddn.com/%E7%94%9F%E6%97%A0%E5%8F%AF%E6%81%8B.jpg" alt="生物可恋"></p>
  <embed src="//music.163.com/style/swf/widget.swf?sid=496948864&type=2&auto=0&width=320&height=66" width="340" height="86" allownetworking="all"></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h1 id=&quot;生无可恋&quot;&gt;&lt;a href=&quot;#生无可恋&quot; class=&quot;head
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>随笔2</title>
    <link href="http://jhonlibai.top/2017/08/25/%E9%9A%8F%E7%AC%942/"/>
    <id>http://jhonlibai.top/2017/08/25/随笔2/</id>
    <published>2017-08-25T07:28:11.000Z</published>
    <updated>2017-08-29T08:25:30.794Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="获取虾米唱片墙"><a href="#获取虾米唱片墙" class="headerlink" title="获取虾米唱片墙"></a>获取虾米唱片墙</h2><ul>
<li><p>封面：<img src="http://ov67n3jz8.bkt.clouddn.com/%E6%B3%B0%E5%8B%92%20%E6%91%A9%E7%94%9F.jpg" alt="泰勒 摩生"></p>
  <script type="text/javascript" src="http://www.xiami.com/widget/player-multi?uid=32334217&sid=1772499047,1772499044,1773446930,1772341517,1772472237,1769759045,1769575204,3611826,&width=400&height=300&mainColor=FF8719&backColor=494949&autoplay=0&mode=js"></script>

</li>
</ul>
<p>失败！！！</p>
]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h2 id=&quot;获取虾米唱片墙&quot;&gt;&lt;a href=&quot;#获取虾米唱片墙&quot; class
    
    </summary>
    
    
      <category term="音乐" scheme="http://jhonlibai.top/tags/%E9%9F%B3%E4%B9%90/"/>
    
  </entry>
  
  <entry>
    <title>随笔1</title>
    <link href="http://jhonlibai.top/2017/08/24/%E9%9A%8F%E7%AC%941/"/>
    <id>http://jhonlibai.top/2017/08/24/随笔1/</id>
    <published>2017-08-24T04:07:16.000Z</published>
    <updated>2017-08-25T06:35:06.561Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="七牛云存图试用篇"><a href="#七牛云存图试用篇" class="headerlink" title="七牛云存图试用篇"></a>七牛云存图试用篇</h1><ul>
<li><p>图片1: <img src="http://ov67n3jz8.bkt.clouddn.com/singing.jpg" alt="张喆"></p>
</li>
<li><p>图片2: <img src="http://ov67n3jz8.bkt.clouddn.com/Jhon&amp;Emilia.jpg" alt="Jhon&amp;Emilia"></p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h1 id=&quot;七牛云存图试用篇&quot;&gt;&lt;a href=&quot;#七牛云存图试用篇&quot; cla
    
    </summary>
    
    
      <category term="照片" scheme="http://jhonlibai.top/tags/%E7%85%A7%E7%89%87/"/>
    
  </entry>
  
  <entry>
    <title>随笔0</title>
    <link href="http://jhonlibai.top/2017/08/23/%E9%9A%8F%E7%AC%940/"/>
    <id>http://jhonlibai.top/2017/08/23/随笔0/</id>
    <published>2017-08-23T08:28:08.000Z</published>
    <updated>2017-08-25T06:41:13.889Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="今天分享一首歌，填充一下内容"><a href="#今天分享一首歌，填充一下内容" class="headerlink" title="今天分享一首歌，填充一下内容"></a>今天分享一首歌，填充一下内容</h3><ul>
<li>专辑图片 <img src="http://ov67n3jz8.bkt.clouddn.com/Hotaru.jpg" alt="Hotaru"></li>
<li>插画师：Rella</li>
</ul>
<ul>
<li>歌曲：Hotaru</li>
<li>作者：Last Number </li>
<li><p>演唱：花近</p>
  <embed src="http://www.xiami.com/widget/32334217_1796482789/singlePlayer.swf" type="application/x-shockwave-flash" width="257" height="33" wmode="transparent">




</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h3 id=&quot;今天分享一首歌，填充一下内容&quot;&gt;&lt;a href=&quot;#今天分享一首歌
    
    </summary>
    
    
      <category term="音乐" scheme="http://jhonlibai.top/tags/%E9%9F%B3%E4%B9%90/"/>
    
  </entry>
  
  <entry>
    <title>Welcome</title>
    <link href="http://jhonlibai.top/2017/08/17/Welcome/"/>
    <id>http://jhonlibai.top/2017/08/17/Welcome/</id>
    <published>2017-08-17T02:03:39.000Z</published>
    <updated>2017-08-23T08:22:33.837Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>这是一个无聊的页面。。。。。。。。。。。。。。。。。。。。。。。</p>
<h2 id="Welcome"><a href="#Welcome" class="headerlink" title="Welcome"></a>Welcome</h2><a id="more"></a>
<h3 id="图片插入"><a href="#图片插入" class="headerlink" title="图片插入"></a>图片插入</h3><ul>
<li>图片1：<a href="http://jhonlibai.top"><img src="http://ohecg7vrp.bkt.clouddn.com/14.gif" alt="jhonlibai" title="blog"></a></li>
</ul>
<ul>
<li><p>图片2：<img src="http://upload-images.jianshu.io/upload_images/3876828-a4346506018aa44f.gif?imageMogr2/auto-orient/strip" alt="面对疾风吧" title="哈赛给 啊痛"></p>
</li>
<li><p>图片3: <img src="file:///F:/blog/source/img/singing.jpg" alt="张喆"></p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这是一个无聊的页面。。。。。。。。。。。。。。。。。。。。。。。&lt;/p&gt;
&lt;h2 id=&quot;Welcome&quot;&gt;&lt;a href=&quot;#Welcome&quot; class=&quot;headerlink&quot; title=&quot;Welcome&quot;&gt;&lt;/a&gt;Welcome&lt;/h2&gt;
    
    </summary>
    
    
      <category term="第一个试用页面" scheme="http://jhonlibai.top/tags/%E7%AC%AC%E4%B8%80%E4%B8%AA%E8%AF%95%E7%94%A8%E9%A1%B5%E9%9D%A2/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://jhonlibai.top/2017/08/11/hello-world/"/>
    <id>http://jhonlibai.top/2017/08/11/hello-world/</id>
    <published>2017-08-11T06:53:39.881Z</published>
    <updated>2017-08-18T04:53:41.396Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<a id="more"></a>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Run-server&quot;&gt;&lt;a href=&quot;#Run-server&quot; class=&quot;headerlink&quot; title=&quot;Run server&quot;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ hexo server&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
